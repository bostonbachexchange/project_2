const express = require('express')
// making a router
const router = express.Router()
// importing Assignment model to access database
const Profile = require('../models/profile')

// DELETE - Delete
// router.delete('/:id', (req, res) => {
//     const fruitId = req.params.id

//     Fruit.findByIdAndRemove(fruitId)
//         .then(fruit => {
//             res.redirect('/fruits')
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// GET route for displaying an update form
// router.get('/:id/edit', (req, res) => {
//     const fruitId = req.params.id

//     Fruit.findById(fruitId)
//         .then(fruit => {
//             res.render('fruits/edit', { fruit })
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// PUT - Update
// router.put('/:id', (req, res) => {
//     const fruitId = req.params.id

//     req.body.readyToEat = req.body.readyToEat === 'on' ? true : false

//     Fruit.findByIdAndUpdate(fruitId, req.body, { new: true })
//         .then(fruit => {
//             res.redirect(`/fruits/${fruit._id}`)
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

// GET route for displaying my form for create
router.get('/new', (req, res) => {
    // idk const username = req.session.username
    // idk const logginIn = req.session.loggedIn
    res.render('profile/new')

})
// POST - Create
router.post('/', (req, res) => {
    // now that we have user specific fruits, we'll add a username upon creation
    // remember, when we login, we saved the username to the session object
    // using the ._id to set the owner field
    req.body.username = req.session.username

    Profile.create(req.body)
        .then(profile => {
            console.log(profile)
            // res.json(fruit)
            res.redirect('/assignments')
        })
        .catch(err => {
            res.json(err)
        })
})

// // GET - /assignment
// // localhost:3000/assignment/index
// router.get('/', (req, res) => {
//     // mongoose to find all fruits
//     Assignment.find({})
//     // return fruits as json
//         .then(assignments => {
//             // res.json(assignment)
//             res.render('assignment/index', { assignments })
//         })
//         .catch(err => {
//             res.json(err)
//         })
// })

//  router.get('/mine', (req, res) => {
//      // find the fruits associated with the logged in user
//     Assignment.find({ username: req.session.username })
//         .then(assignments => {
//             res.render('main/home', { assignments })
//         })
//         .catch(error => {
//             console.log(error)
//             res.json({ error })
//         })
// })


// GET - Show
// localhost:3000/fruits/:id <- change with the id being passed in
// router.get('/:id', (req, res) => {
//     const assignmentId = req.params.id

//     Assignment.findById(assignmentId)
//     // populate our User models fields
//     // comment has an author field and that is the ref to the User model
//     // always going to be a string of the value you want to populate
//     // this also has to be another model
//         //.populate('comments.author')
//         // send back some json
//         .then(assignment => {
//         //   res.json(assignment)
//         //     const userId = req.session.userId
//         //     const username = req.session.username
//              res.render('assignment/show', { assignment})
//          })
//         .catch(err => {
//             res.json(err)
//         })
// })

module.exports = router
